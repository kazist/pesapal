<?php

namespace Pesapal\Payments\Code\Classes;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

use Pesapal\Payments\Code\Models\PaymentsModel;

class Pesapal {

    public $request = '';

    public function __construct() {
        global $sc;

        $this->request = $sc->get('request');
    }

    public function getPesapalIframe($parameters) {

        require_once(JPATH_ROOT . 'applications/Pesapal/Payments/Pesapal/Code/Classes/OAuth.php');

        $paymentmodel = new PaymentsModel();

        //pesapal params
        $token = $params = NULL;

        /*
          PesaPal Sandbox is at http://demo.pesapal.com. Use this to test your developement and
          when you are ready to go live change to https://www.pesapal.com.
         */
        $consumer_key = $parameters['consumer_key']; //Register a merchant account on
        //demo.pesapal.com and use the merchant key for testing.
        //When you are ready to go live make sure you change the key to the live account
        //registered on www.pesapal.com!
        $consumer_secret = $parameters['consumer_secret']; // Use the secret from your test
        //account on demo.pesapal.com. When you are ready to go live make sure you 
        //change the secret to the live account registered on www.pesapal.com!
        $signature_method = new \OAuthSignatureMethod_HMAC_SHA1();
        $iframelink = $parameters['iframelink']; //'http://demo.pesapal.com/api/PostPesapalDirectOrderV4'; //change to      
        //https://www.pesapal.com/API/PostPesapalDirectOrderV4 when you are ready to go live!
        //get form details
        $amount = $parameters['amount'];
        $amount = number_format($amount, 2); //format amount to 2 decimal places

        $desc = $parameters['description'];
        $type = $parameters['type']; //default value = MERCHANT
        $reference = $parameters['reference']; //unique order id of the transaction, generated by merchant
        $first_name = $parameters['first_name'];
        $last_name = $parameters['last_name'];
        $email = $parameters['email'];
        $phonenumber = ''; //ONE of email or phonenumber is required

        $callback_url = $parameters['callback_url']; //redirect url, the page that will handle the response from pesapal.

        $post_xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?><PesapalDirectOrderInfo xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Amount=\"" . $amount . "\" Description=\"" . $desc . "\" Type=\"" . $type . "\" Reference=\"" . $reference . "\" FirstName=\"" . $first_name . "\" LastName=\"" . $last_name . "\" Email=\"" . $email . "\" PhoneNumber=\"" . $phonenumber . "\" xmlns=\"http://www.pesapal.com\" />";
        $post_xml = htmlentities($post_xml);

        $consumer = new \OAuthConsumer($consumer_key, $consumer_secret);

        //post transaction to pesapal
        $iframe_src = \OAuthRequest::from_consumer_and_token($consumer, $token, "GET", $iframelink, $params);
        $iframe_src->set_parameter("oauth_callback", $callback_url);
        $iframe_src->set_parameter("pesapal_request_data", $post_xml);
        $iframe_src->sign_request($signature_method, $consumer, $token);

        //display pesapal - iframe and pass iframe_src
        $html = '<iframe src="' . $iframe_src . '" width="100%" height="700px"  scrolling="no" frameBorder="0">' .
                '<p>Browser unable to load iFrame</p>' .
                '</iframe>';

        return $html;
    }

    public function processReturns($parameters) {

        require_once(JPATH_ROOT . 'applications/Pesapal/Payments/Pesapal/Code/Classes/OAuth.php');

        $consumer_key = $parameters['consumer_key']; //Register a merchant account on
        //demo.pesapal.com and use the merchant key for testing.
        //When you are ready to go live make sure you change the key to the live account
        //registered on www.pesapal.com!
        $consumer_secret = $parameters['consumer_secret']; // Use the secret from your test
        //account on demo.pesapal.com. When you are ready to go live make sure you 
        //change the secret to the live account registered on www.pesapal.com!
        $statusrequestAPI = $parameters['statusrequestAPI'];
        //'http://demo.pesapal.com/api/querypaymentstatus'; //change to      
        //https://www.pesapal.com/api/querypaymentstatus' when you are ready to go live!
        // Parameters sent to you by PesaPal IPN
        $pesapalNotification = $this->request->get('pesapal_notification_type');
        $pesapalTrackingId = $this->request->get('pesapal_transaction_tracking_id');
        $pesapal_merchant_reference = $this->request->get('pesapal_merchant_reference');


        if ($pesapalNotification == "CHANGE" && $pesapalTrackingId != '') {
            $token = $params = NULL;
            $consumer = new \OAuthConsumer($consumer_key, $consumer_secret);
            $signature_method = new \OAuthSignatureMethod_HMAC_SHA1();

            //get transaction status
            $request_status = \OAuthRequest::from_consumer_and_token($consumer, $token, "GET", $statusrequestAPI, $params);
            $request_status->set_parameter("pesapal_merchant_reference", $pesapal_merchant_reference);
            $request_status->set_parameter("pesapal_transaction_tracking_id", $pesapalTrackingId);
            $request_status->sign_request($signature_method, $consumer, $token);

            $ch = curl_init();
            curl_setopt($ch, CURLOPT_URL, $request_status);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_HEADER, 1);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            if (defined('CURL_PROXY_REQUIRED'))
                if (CURL_PROXY_REQUIRED == 'True') {
                    $proxy_tunnel_flag = (defined('CURL_PROXY_TUNNEL_FLAG') && strtoupper(CURL_PROXY_TUNNEL_FLAG) == 'FALSE') ? false : true;
                    curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, $proxy_tunnel_flag);
                    curl_setopt($ch, CURLOPT_PROXYTYPE, CURLPROXY_HTTP);
                    curl_setopt($ch, CURLOPT_PROXY, CURL_PROXY_SERVER_DETAILS);
                }

            $response = curl_exec($ch);

            $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
            $raw_header = substr($response, 0, $header_size - 4);
            $headerArray = explode("\r\n\r\n", $raw_header);
            $header = $headerArray[count($headerArray) - 1];

            //transaction status
            $elements = preg_split("/=/", substr($response, $header_size));
            $status = $elements[1];

            curl_close($ch);

            //UPDATE YOUR DB TABLE WITH NEW STATUS FOR TRANSACTION WITH pesapal_transaction_tracking_id $pesapalTrackingId
            $resp = "pesapal_notification_type=$pesapalNotification&pesapal_transaction_tracking_id=$pesapalTrackingId&pesapal_merchant_reference=$pesapal_merchant_reference";

            ob_start();
            echo $resp;
            ob_flush();

            return $status;
        }
    }

}
